{"version":3,"sources":["Const.js","i18n.js","Components/langTable/langTable.style.js","Components/langTable/langTable.jsx","Components/Header/Header.style.js","Components/Header/Header.jsx","App.style.js","App.jsx","index.jsx"],"names":["langauges","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","lng","load","backend","loadPath","preload","react","useSuspense","wait","interpolation","escapeValue","StyledHeaderRow","styled","TableHeaderRow","Row","backgroundColor","fontSize","padding","StyledHeaderCell","Cell","color","StyledFixedColumnCell","TableFixedColumns","zIndex","borderRight","left","StyledPaper","Paper","headerRow","restProps","headerCell","fixedCell","Object","keys","tableRow","indexOf","withTranslation","columns","map","col","name","title","rows","resources","lan","data","getDataByLanguage","console","log","undefined","translation","key","push","getData","elevation","data-test","defaultOrder","showSortingControls","rowComponent","cellComponent","leftColumns","StyledBox","display","marginLeft","justifyContent","fontWeight","HeaderIcon","TranslateIcon","marginRight","Header","GlobalStyle","createGlobalStyle","body","margin","fontFamily","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eec066c0.chunk.js","sourcesContent":["export const langauges = [\"en\", \"ta\", \"te\", \"hi\", \"ml\", \"it\", \"ja\"];\n\nexport const color = \"#0ecea6\";\n","import i18n from \"i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport { langauges } from \"./Const\";\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n    lng: \"en\",\n    load: \"all\",\n    backend: {\n      loadPath: () => {                       \n        return '/i18n/locales/{{lng}}/translation.json';\n      },\n    },\n    preload: langauges,\n    react: {\n      useSuspense: false,\n      wait: true,\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import {\n  TableHeaderRow,\n  TableFixedColumns,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport Paper from \"@material-ui/core/Paper\";\nimport styled from \"styled-components\";\nimport { color } from \"../../Const\";\n\nexport const StyledHeaderRow = styled(TableHeaderRow.Row)({\n  backgroundColor: color,\n  fontSize: \"0.85rem\",\n  padding: \"5px\",\n});\n\nexport const StyledHeaderCell = styled(TableHeaderRow.Cell)({\n  color: \"#fff !important\",\n});\n\nexport const StyledFixedColumnCell = styled(TableFixedColumns.Cell)({\n  backgroundColor: \"inherit !important\",\n  fontSize: \"0.85rem\",\n  padding: \"5px\",\n  color: \"#fff\",\n  zIndex: \"600\",\n  borderRight: \"1px solid rgba(224, 224, 224, 1)\",\n  left: 0,\n});\n\nexport const StyledPaper = styled(Paper)`\n  &&& {\n    margin: 16px;\n  }\n`;\n","import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { SortingState,IntegratedSorting,IntegratedFiltering,SearchState } from '@devexpress/dx-react-grid';\r\nimport { Grid,Table,TableHeaderRow,TableFixedColumns,DragDropProvider,TableColumnReordering,Toolbar,SearchPanel } from '@devexpress/dx-react-grid-material-ui';\r\nimport { StyledHeaderRow,StyledHeaderCell,StyledFixedColumnCell,StyledPaper } from './langTable.style';\r\nimport { langauges } from '../../Const';\r\n\r\n\r\nfunction getData(i18n) {\r\n    let keys = [];\r\n    let resources = [];\r\n    langauges.map(lan => {\r\n        const data = i18n.getDataByLanguage(lan);     \r\n        console.log()   \r\n        if(data !==  undefined){\r\n            Object.keys(data.translation).map(key => keys.indexOf(key) < 0 ? keys.push(key) : '');\r\n            resources = {...resources,[lan] : data.translation };\r\n        }\r\n        else{\r\n          resources = {...resources,[lan] : {}};\r\n        }\r\n        return ''      \r\n    });  \r\n    const rows = keys.map(key => {\r\n                    let data = {key};\r\n                    langauges.map(lan => data[lan] = resources[lan][key]  !== undefined ? resources[lan][key] : '' );\r\n                    return data;  \r\n                    });                     \r\n    return rows;\r\n}\r\n  \r\nconst headerRow = ({...restProps}) => (\r\n    <StyledHeaderRow      \r\n      {...restProps}\r\n    />\r\n  );\r\n\r\nconst headerCell = ({...restProps}) => (\r\n    <StyledHeaderCell    \r\n      {...restProps}\r\n    />\r\n  );\r\n\r\nconst fixedCell = ({...restProps}) => {      \r\n    if(Object.keys(restProps.tableRow).indexOf('row') < 0){\r\n        return <StyledFixedColumnCell {...restProps}/> \r\n    }    \r\n    return <TableFixedColumns.Cell      \r\n      {...restProps}\r\n    />\r\n};\r\n\r\nfunction LangTable ({i18n}) {    \r\n  const columns = ['key',...langauges].map(col => {return {name : col, title : col}});     \r\n  const rows = getData(i18n);   \r\n  return (\r\n    <StyledPaper elevation={6} data-test='Table-Component' >                                                                                                                            \r\n        <Grid data-test='Grid'\r\n        rows={rows}\r\n        columns={columns}\r\n        >\r\n        <DragDropProvider />\r\n        <SortingState />\r\n        <IntegratedSorting />  \r\n        <SearchState />\r\n        <IntegratedFiltering />   \r\n        <Table />\r\n        <TableColumnReordering defaultOrder={['key',...langauges]} />\r\n        <TableHeaderRow showSortingControls \r\n          data-test='Header'\r\n          rowComponent={headerRow} \r\n          cellComponent={headerCell} />\r\n        <Toolbar />\r\n        <SearchPanel />        \r\n        <TableFixedColumns\r\n          data-test='Fixed-Column'\r\n          leftColumns={['key']} \r\n          cellComponent={fixedCell}         \r\n        />\r\n        </Grid>\r\n    </StyledPaper>\r\n  );\r\n}\r\n\r\nexport default withTranslation()(LangTable);\r\n\r\n\r\n\r\n\r\n\r\n","import Paper from \"@material-ui/core/Paper\";\nimport styled from \"styled-components\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport { color } from \"../../Const\";\n\nexport const StyledPaper = styled(Paper)`\n  &&& {\n    background-color: ${color};\n    overflow: hidden;\n    margin-bottom: 10px;\n    height: 50px;\n    align-items: center;\n    display: flex;\n    color: #fff;\n    border-radius: 0;\n  }\n`;\n\nexport const StyledBox = styled(\"div\")({\n  display: \"flex\",\n  marginLeft: \"20px\",\n  justifyContent: \"center\",\n  fontWeight: \"bold\",\n  fontSize: \"20px\",\n});\n\nexport const HeaderIcon = styled(TranslateIcon)({\n  marginRight: \"10px\",\n});\n","import React from 'react';\r\nimport { StyledPaper,StyledBox,HeaderIcon } from './Header.style';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <StyledPaper elevation={0} data-test='Header-Component'>\r\n            <StyledBox data-test='Title'>\r\n            <HeaderIcon/>\r\n                Multi Language\r\n            </StyledBox>\r\n            \r\n        </StyledPaper>        \r\n    );\r\n};\r\n\r\nexport default Header;","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle({\n  body: {\n    margin: 0,\n    backgroundColor: \"rgb(241, 241, 241)\",\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  },\n});\n","import React from 'react';\nimport Table from './Components/langTable/langTable';\nimport Header from './Components/Header/Header';\nimport { GlobalStyle } from './App.style';\n\nfunction App() {\n  return (\n    <>  \n        <GlobalStyle />\n        <Header />    \n        <Table />      \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport App from './App';\n\nReactDOM.render(  \n    <App />  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}